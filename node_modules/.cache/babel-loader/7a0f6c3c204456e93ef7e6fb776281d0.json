{"ast":null,"code":"var _jsxFileName = \"/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/routes.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Home from './scenes/home';\nimport Auth from './scenes/auth';\nimport Connector from './utils/connector';\n\nconst Router = ({\n  checked,\n  loggedIn\n}) => {\n  if (!checked) return React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Loading...\");\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, loggedIn ? React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    name: \"Home\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })) : React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: Auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })));\n};\n\nexport default (props => React.createElement(Connector, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, ({\n  state: {\n    app: {\n      loggedIn,\n      checked\n    }\n  }\n}) => React.createElement(Router, Object.assign({\n  checked: checked,\n  loggedIn: loggedIn\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}))));","map":{"version":3,"sources":["/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/routes.js"],"names":["React","BrowserRouter","Route","Switch","Redirect","Home","Auth","Connector","Router","checked","loggedIn","props","state","app"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AACxC,MAAI,CAACD,OAAL,EAAc,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACd,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,GACP,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,IAAI,EAAC,MAArB;AAA4B,IAAA,SAAS,EAAEL,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADO,GAMP,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAPJ,CADF;AAeD,CAjBD;;AAmBA,gBAAeK,KAAK,IAClB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,GAAG,EAAE;AAAEH,MAAAA,QAAF;AAAYD,MAAAA;AAAZ;AAAP;AAAT,CAAD,KACE,oBAAC,MAAD;AACE,EAAA,OAAO,EAAEA,OADX;AAEE,EAAA,QAAQ,EAAEC;AAFZ,GAGMC,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAHN,CADF","sourcesContent":["import React from 'react'\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport Home from './scenes/home'\nimport Auth from './scenes/auth'\nimport Connector from './utils/connector'\n\nconst Router = ({ checked, loggedIn }) => {\n  if (!checked) return <aside>Loading...</aside>\n  return (\n    <BrowserRouter>\n      {loggedIn ? (\n        <Switch>\n          <Route path=\"/\" name=\"Home\" component={Home} />\n          <Redirect to=\"/\" />\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/\" component={Auth} />\n          <Redirect to=\"/\" />\n        </Switch>\n      )}\n    </BrowserRouter>\n  )\n}\n\nexport default props => (\n  <Connector>\n    {\n      ({ state: { app: { loggedIn, checked } } }) => (\n        <Router\n          checked={checked}\n          loggedIn={loggedIn}\n          {...props}\n        />\n      )\n    }\n  </Connector>\n)\n"]},"metadata":{},"sourceType":"module"}