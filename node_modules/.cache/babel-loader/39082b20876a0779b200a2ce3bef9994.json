{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport app from '../modules/app.module';\n\nconst analytics = () => next => action => {\n  window.dataLayer = window.dataLayer || [];\n  window.dataLayer.push({\n    event: action.type,\n    payload: action.payload\n  });\n  return next(action);\n}; // Redux store config\n\n\nconst configureStore = (initialState = {}) => {\n  const reducers = combineReducers({\n    app\n  }); // Middleware and store enhancers\n\n  const middlewares = [thunk, process.env.NODE_ENV !== 'production' && logger, analytics].filter(Boolean);\n  const enhancer = compose(applyMiddleware(...middlewares));\n  const store = createStore(reducers, initialState, enhancer);\n  return store;\n};\n\nconst store = configureStore();\nexport default store;","map":{"version":3,"sources":["/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/utils/store.js"],"names":["createStore","applyMiddleware","compose","combineReducers","thunk","logger","app","analytics","next","action","window","dataLayer","push","event","type","payload","configureStore","initialState","reducers","middlewares","process","env","NODE_ENV","filter","Boolean","enhancer","store"],"mappings":"AAAA,SACEA,WADF,EACeC,eADf,EACgCC,OADhC,EACyCC,eADzC,QAEO,OAFP;AAGA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAEA,MAAMC,SAAS,GAAG,MAAMC,IAAI,IAAKC,MAAD,IAAY;AAC1CC,EAAAA,MAAM,CAACC,SAAP,GAAmBD,MAAM,CAACC,SAAP,IAAoB,EAAvC;AACAD,EAAAA,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAsB;AACpBC,IAAAA,KAAK,EAAEJ,MAAM,CAACK,IADM;AAEpBC,IAAAA,OAAO,EAAEN,MAAM,CAACM;AAFI,GAAtB;AAKA,SAAOP,IAAI,CAACC,MAAD,CAAX;AACD,CARD,C,CAUA;;;AACA,MAAMO,cAAc,GAAG,CAACC,YAAY,GAAG,EAAhB,KAAuB;AAC5C,QAAMC,QAAQ,GAAGf,eAAe,CAAC;AAC/BG,IAAAA;AAD+B,GAAD,CAAhC,CAD4C,CAK5C;;AACA,QAAMa,WAAW,GAAG,CAClBf,KADkB,EAElBgB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCjB,MAFvB,EAGlBE,SAHkB,EAIlBgB,MAJkB,CAIXC,OAJW,CAApB;AAKA,QAAMC,QAAQ,GAAGvB,OAAO,CAACD,eAAe,CAAC,GAAGkB,WAAJ,CAAhB,CAAxB;AACA,QAAMO,KAAK,GAAG1B,WAAW,CAACkB,QAAD,EAAWD,YAAX,EAAyBQ,QAAzB,CAAzB;AAEA,SAAOC,KAAP;AACD,CAfD;;AAiBA,MAAMA,KAAK,GAAGV,cAAc,EAA5B;AAEA,eAAeU,KAAf","sourcesContent":["import {\n  createStore, applyMiddleware, compose, combineReducers,\n} from 'redux'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport app from '../modules/app.module'\n\nconst analytics = () => next => (action) => {\n  window.dataLayer = window.dataLayer || []\n  window.dataLayer.push({\n    event: action.type,\n    payload: action.payload,\n  })\n\n  return next(action)\n}\n\n// Redux store config\nconst configureStore = (initialState = {}) => {\n  const reducers = combineReducers({\n    app,\n  })\n\n  // Middleware and store enhancers\n  const middlewares = [\n    thunk,\n    process.env.NODE_ENV !== 'production' && logger,\n    analytics,\n  ].filter(Boolean)\n  const enhancer = compose(applyMiddleware(...middlewares))\n  const store = createStore(reducers, initialState, enhancer)\n\n  return store\n}\n\nconst store = configureStore()\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}