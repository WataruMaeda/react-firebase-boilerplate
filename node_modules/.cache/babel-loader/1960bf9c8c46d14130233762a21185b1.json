{"ast":null,"code":"var _jsxFileName = \"/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/scenes/auth/ConfirmEmail/ConfirmEmail.js\";\nimport React, { Component } from 'react'; // import PropTypes from 'prop-types'\n\nimport { Redirect } from 'react-router-dom';\nimport { styler, colors } from '../../../theme';\nimport { Button } from '../../../components/Button';\nimport FontIcon from '../../../components/FontIcon';\nimport { path } from '../../../utils/const';\nconst styles = styler({\n  root: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: colors.lightGrayPurple\n  },\n  contents: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%'\n  },\n  img: {\n    fontSize: 80,\n    color: colors.yellow\n  },\n  title: {\n    fontSize: 24,\n    marginTop: 40,\n    color: colors.yellow\n  },\n  desc: {\n    whiteSpace: 'pre-line',\n    fontSize: 16,\n    marginTop: 20\n  },\n  btn: {\n    padding: '10px 20px',\n    fontSize: 20,\n    marginTop: 40,\n    borderRadius: 10,\n    '&::before': {\n      borderRadius: 10\n    },\n    '&:hover::before': {\n      borderRadius: 10\n    },\n    marginBottom: 40\n  },\n  resend: {\n    fontSize: 16,\n    color: colors.orange // textDecoration: 'underline',\n\n  }\n});\n\nclass ConfirmEmail extends Component {\n  render() {\n    const history = this.props.history; // const { history, location: { state: { email } } } = this.props\n    // if (!email) return <Redirect to={path.auth.login} />\n\n    return React.createElement(\"div\", {\n      className: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.contents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(FontIcon, {\n      icon: \"envelope-open-text\",\n      className: styles.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Email Confirmation\"), React.createElement(\"p\", {\n      className: styles.desc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"We have sent email to\", '\\t', React.createElement(\"a\", {\n      href: \"mailto:test@test.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"test@test.com\"), '\\t', \"to confirm the validity of your email address. After receiving the email follow the link provided to complete your registration.\"), React.createElement(Button, {\n      label: \"Login after Email Confirmation\",\n      className: \"btn-yellow-gradation \".concat(styles.btn),\n      onClick: () => history.push(path.login),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"If you haven't got any email\", React.createElement(Button, {\n      label: \"Resend Confirmation Email\",\n      className: styles.resend,\n      onClick: () => history.push(path.login),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nConfirmEmail.propTypes = {};\nConfirmEmail.defaultProps = {};\nexport default ConfirmEmail;","map":{"version":3,"sources":["/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/scenes/auth/ConfirmEmail/ConfirmEmail.js"],"names":["React","Component","Redirect","styler","colors","Button","FontIcon","path","styles","root","flex","display","justifyContent","alignItems","background","lightGrayPurple","contents","flexDirection","width","img","fontSize","color","yellow","title","marginTop","desc","whiteSpace","btn","padding","borderRadius","marginBottom","resend","orange","ConfirmEmail","render","history","props","push","login","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import PropTypes from 'prop-types'\nimport { Redirect } from 'react-router-dom'\nimport { styler, colors } from '../../../theme'\nimport { Button } from '../../../components/Button'\nimport FontIcon from '../../../components/FontIcon'\nimport { path } from '../../../utils/const'\n\nconst styles = styler({\n  root: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: colors.lightGrayPurple,\n  },\n  contents: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n  },\n  img: {\n    fontSize: 80,\n    color: colors.yellow,\n  },\n  title: {\n    fontSize: 24,\n    marginTop: 40,\n    color: colors.yellow\n  },\n  desc: {\n    whiteSpace: 'pre-line',\n    fontSize: 16,\n    marginTop: 20,\n  },\n  btn: {\n    padding: '10px 20px',\n    fontSize: 20,\n    marginTop: 40,\n    borderRadius: 10,\n    '&::before': {\n      borderRadius: 10,\n    },\n    '&:hover::before': {\n      borderRadius: 10,\n    },\n    marginBottom: 40,\n  },\n  resend: {\n    fontSize: 16,\n    color: colors.orange,\n    // textDecoration: 'underline',\n  },\n})\n\nclass ConfirmEmail extends Component {\n  render() {\n    const { history } = this.props\n    // const { history, location: { state: { email } } } = this.props\n    // if (!email) return <Redirect to={path.auth.login} />\n    return (\n      <div className={styles.root}>\n        <div className={styles.contents}>\n          <FontIcon\n            icon=\"envelope-open-text\"\n            className={styles.img}\n          />\n          <h2 className={styles.title}>Email Confirmation</h2>\n          <p className={styles.desc}>\n            We have sent email to{'\\t'}\n            <a href={`mailto:test@test.com`}>test@test.com</a>{'\\t'}\n            to confirm the validity of your email address. After receiving the email follow the link provided to complete your registration.</p>\n          <Button\n            label=\"Login after Email Confirmation\"\n            className={`btn-yellow-gradation ${styles.btn}`}\n            onClick={() => history.push(path.login)}\n          />\n          <p>\n            If you haven't got any email \n            <Button\n              label=\"Resend Confirmation Email\"\n              className={styles.resend}\n              onClick={() => history.push(path.login)}\n            />\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nConfirmEmail.propTypes = {}\nConfirmEmail.defaultProps = {}\n\nexport default ConfirmEmail"]},"metadata":{},"sourceType":"module"}