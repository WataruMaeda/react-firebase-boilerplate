{"ast":null,"code":"import _defineProperty from \"/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/scenes/auth/SetUserInfo/SetUserInfo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Input from '../../../components/Input';\nimport { styler, theme } from '../../../styles';\nimport { Button } from '../../../components/Button';\nimport FilePicker from '../../../components/FilePicker';\nimport Error from '../../../components/Error';\nimport { path } from '../../../utils/const';\nimport { storage } from '../../../utils/firebase';\nimport Connector from '../../../utils/connector';\nimport { validate, tests } from '../../../utils/vali';\nconst styles = styler({\n  root: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: theme.colors.lightGrayPurple\n  },\n  contents: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '80%'\n  },\n  centerRow: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    color: theme.colors.purple,\n    fontSize: 32,\n    marginBottom: 50\n  },\n  file: {\n    fontSize: 18,\n    textDecoration: 'underline',\n    color: theme.colors.purple,\n    '&:hover': {\n      color: theme.colors.blackPurple\n    }\n  },\n  img: {\n    width: 120,\n    height: 120,\n    objectFit: 'cover',\n    borderRadius: 60,\n    marginBottom: 30\n  },\n  footer: {\n    marginTop: 80,\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  btn: {\n    height: 60,\n    width: 210,\n    fontSize: 18,\n    fontWeight: 'bold',\n    borderRadius: 10,\n    '&::before': {\n      borderRadius: 10\n    },\n    '&:hover::before': {\n      borderRadius: 10\n    }\n  }\n});\nconst customTests = {\n  accountName: {\n    test: tests.input.test,\n    error: 'アカウント名を入力してください'\n  }\n};\n\nclass SetUserInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      file: null,\n      accountImage: theme.images.prof,\n      accountName: '',\n      // tags: [],\n      errors: {},\n      resErr: null,\n      isLoading: false\n    };\n\n    this.handleInputChange = ({\n      target\n    }) => {\n      const name = target.name,\n            value = target.value;\n      const errors = this.state.errors;\n      this.setState({\n        [name]: value,\n        errors: _objectSpread({}, errors, {\n          [name]: ''\n        })\n      });\n    };\n\n    this.onSubmit = () => {\n      // validation\n      const isLoading = this.state.isLoading;\n\n      const _validate = validate(this.state, customTests),\n            isError = _validate.isError,\n            errors = _validate.errors;\n\n      this.setState({\n        errors\n      });\n      if (isError || isLoading) return; // update me\n\n      this.setState({\n        isLoading: true,\n        resErr: null\n      });\n      const _this$props = this.props,\n            actions = _this$props.actions,\n            history = _this$props.history;\n      const _this$state = this.state,\n            accountName = _this$state.accountName,\n            accountImage = _this$state.accountImage;\n      actions.updateMe(accountName, accountImage).then(() => {\n        this.setState({\n          resErr: null,\n          isLoading: false\n        });\n      }).catch(err => {\n        this.setState({\n          resErr: err.message,\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  componentWillMount() {\n    // set default image\n    storage.child('default/profile.png').getDownloadURL().then(url => {\n      this.setState({\n        accountImage: url\n      });\n    });\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          history = _this$props2.history,\n          me = _this$props2.me;\n    if (!me) return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    });\n    const _this$state2 = this.state,\n          accountName = _this$state2.accountName,\n          accountImage = _this$state2.accountImage,\n          errors = _this$state2.errors,\n          resErr = _this$state2.resErr,\n          isLoading = _this$state2.isLoading;\n    return React.createElement(\"div\", {\n      className: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Error, {\n      message: resErr,\n      onClose: () => {\n        this.setState({\n          resErr: null\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.contents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\"), React.createElement(\"div\", {\n      className: styles.centerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: typeof accountImage === 'object' ? URL.createObjectURL(accountImage) : accountImage,\n      className: styles.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(FilePicker, {\n      maxSize: 300000,\n      onSelect: f => this.setState({\n        accountImage: f,\n        resErr: null\n      }),\n      onError: () => this.setState({\n        resErr: '300kb以下の画像を選択してください'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: styles.file,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u5199\\u771F\\u3092\\u9078\\u629E\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(Input, {\n      type: \"text\",\n      name: \"accountName\",\n      label: \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u540D\",\n      value: accountName,\n      placeholder: \"\",\n      onChange: this.handleInputChange,\n      error: errors.accountName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Button, {\n      label: \"\\u623B\\u308B\",\n      className: \"btn-purple-outline \".concat(styles.btn),\n      onClick: () => history.push(path.auth.login),\n      display: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u3092\\u4F5C\\u6210\",\n      className: \"btn-purple-gradation \".concat(styles.btn),\n      onClick: this.onSubmit,\n      isLoading: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst ConnectedSetUserInfo = props => React.createElement(Connector, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 196\n  },\n  __self: this\n}, ({\n  actions,\n  state: {\n    app: {\n      me\n    }\n  }\n}) => React.createElement(SetUserInfo, Object.assign({\n  me: me,\n  actions: actions.app\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 199\n  },\n  __self: this\n})));\n\nSetUserInfo.propTypes = {};\nSetUserInfo.defaultProps = {};\nexport default ConnectedSetUserInfo;","map":{"version":3,"sources":["/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/scenes/auth/SetUserInfo/SetUserInfo.js"],"names":["React","Component","Redirect","Input","styler","theme","Button","FilePicker","Error","path","storage","Connector","validate","tests","styles","root","flex","display","flexDirection","justifyContent","alignItems","background","colors","lightGrayPurple","contents","width","centerRow","title","color","purple","fontSize","marginBottom","file","textDecoration","blackPurple","img","height","objectFit","borderRadius","footer","marginTop","btn","fontWeight","customTests","accountName","test","input","error","SetUserInfo","state","accountImage","images","prof","errors","resErr","isLoading","handleInputChange","target","name","value","setState","onSubmit","isError","props","actions","history","updateMe","then","catch","err","message","componentWillMount","child","getDownloadURL","url","render","me","URL","createObjectURL","f","push","auth","login","ConnectedSetUserInfo","app","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport Input from '../../../components/Input'\nimport { styler, theme } from '../../../styles'\nimport { Button } from '../../../components/Button'\nimport FilePicker from '../../../components/FilePicker'\nimport Error from '../../../components/Error'\nimport { path } from '../../../utils/const'\nimport { storage } from '../../../utils/firebase'\nimport Connector from '../../../utils/connector'\nimport { validate, tests } from '../../../utils/vali'\n\nconst styles = styler({\n  root: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: theme.colors.lightGrayPurple,\n  },\n  contents: {\n    display: 'flex',  \n    flexDirection: 'column',\n    width: '80%',\n  },\n  centerRow: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    color: theme.colors.purple,\n    fontSize: 32,\n    marginBottom: 50,\n  },\n  file: {\n    fontSize: 18,\n    textDecoration: 'underline',\n    color: theme.colors.purple,\n    '&:hover': {\n      color: theme.colors.blackPurple,\n    },\n  },\n  img: {\n    width: 120,\n    height: 120,\n    objectFit: 'cover',\n    borderRadius: 60,\n    marginBottom: 30,\n  },\n  footer: {\n    marginTop: 80,\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  btn: {\n    height: 60,\n    width: 210,\n    fontSize: 18,\n    fontWeight: 'bold',\n    borderRadius: 10,\n    '&::before': {\n      borderRadius: 10,\n    },\n    '&:hover::before': {\n      borderRadius: 10,\n    },\n  },\n})\n\nconst customTests = {\n  accountName: {\n    test: tests.input.test,\n    error: 'アカウント名を入力してください'\n  },\n}\n\nclass SetUserInfo extends Component {\n  state = {\n    file: null,\n    accountImage: theme.images.prof,\n    accountName: '',\n    // tags: [],\n    errors: {},\n    resErr: null,\n    isLoading: false,\n  }\n\n  componentWillMount() {\n    // set default image\n    storage.child('default/profile.png').getDownloadURL().then((url) => {\n     this.setState({ accountImage: url })\n    })\n  }\n\n  handleInputChange = ({ target }) => {\n    const { name, value } = target\n    const { errors } = this.state\n\n    this.setState({\n      [name]: value,\n      errors: {\n        ...errors,\n        [name]: '',\n      },\n    })\n  }\n\n  onSubmit = () => {\n    // validation\n    const { isLoading } = this.state\n    const { isError, errors } = validate(this.state, customTests)\n    this.setState({ errors })\n    if (isError || isLoading) return\n\n    // update me\n    this.setState({ isLoading: true, resErr: null })\n    const { actions, history } = this.props\n    const { accountName, accountImage } = this.state\n    actions.updateMe(accountName, accountImage).then(() => {\n      this.setState({ resErr: null, isLoading: false })\n    }).catch(err => {\n      this.setState({ resErr: err.message, isLoading: false })\n    }) \n  }\n\n  render() {\n    const { history, me } = this.props\n    if (!me) return <Redirect to=\"/\" />\n\n    const { accountName, accountImage, errors, resErr, isLoading } = this.state\n    return (\n      <div className={styles.root}>\n        <Error\n          message={resErr}\n          onClose={() => {\n            this.setState({ resErr: null })\n          }}\n        />\n        <div className={styles.contents}>\n          <h3 className={styles.title}>プロフィール</h3>\n          <div className={styles.centerRow}>\n            <img\n              src={typeof accountImage === 'object' ? URL.createObjectURL(accountImage) : accountImage}\n              className={styles.img}\n            />\n            <FilePicker\n              maxSize={300000}\n              onSelect={f => this.setState({ accountImage: f, resErr: null })}\n              onError={() => this.setState({ resErr: '300kb以下の画像を選択してください' })}\n            >\n              <p className={styles.file}>プロフィール写真を選択</p>\n            </FilePicker>\n            <br />\n          </div>\n          <Input\n            type=\"text\"\n            name=\"accountName\"\n            label=\"アカウント名\"\n            value={accountName}\n            placeholder=\"\"\n            onChange={this.handleInputChange}\n            error={errors.accountName}\n          />\n          {/* <Select\n            label=\"興味のあるタグ\"\n            values={tags}\n            options={['English', 'IT']}\n            onChange={ts => this.setState({ tags: ts })}\n            isCreatable\n            isMulti\n          /> */}\n          <div className={styles.footer}>\n            <Button\n              label=\"戻る\"\n              className={`btn-purple-outline ${styles.btn}`}\n              onClick={() => history.push(path.auth.login)}\n              display={isLoading}\n            />\n            <Button\n              label=\"アカウントを作成\"\n              className={`btn-purple-gradation ${styles.btn}`}\n              onClick={this.onSubmit}\n              isLoading={isLoading}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst ConnectedSetUserInfo = props => (\n  <Connector>\n    {\n      ({ actions, state: { app: { me } } }) => (\n        <SetUserInfo\n          me={me}\n          actions={actions.app}\n          {...props}\n        />\n      )\n    }\n  </Connector>\n)\n\nSetUserInfo.propTypes = {}\nSetUserInfo.defaultProps = {}\n\nexport default ConnectedSetUserInfo\n"]},"metadata":{},"sourceType":"module"}