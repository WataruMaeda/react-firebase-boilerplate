{"ast":null,"code":"import _defineProperty from \"/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { auth, storage } from '../utils/firebase'\n// import { message } from '../utils/const'\n// ------------------------------------\n// Constants\n// ------------------------------------\nconst SAVE_ME = 'SAVE_ME';\nconst LOGGED_IN = 'LOGGED_IN';\nconst initialState = {\n  checked: false,\n  loggedIn: false,\n  me: {}\n}; // ------------------------------------\n// Actions\n// ------------------------------------\n\nexport const authenticate = () => dispatch => {\n  // TODO: authenticate user\n  dispatch({\n    type: LOGGED_IN,\n    loggedIn: false,\n    checked: true,\n    me: null\n  });\n};\n\nconst signup = (email, password) => dispatch => new Promise(async (resolve, reject) => {\n  try {\n    // TODO: signup\n    dispatch({\n      type: LOGGED_IN,\n      loggedIn: true,\n      checked: true,\n      me: {\n        email\n      }\n    });\n    resolve();\n  } catch (err) {\n    reject(err);\n  }\n});\n\nconst login = (email, password) => dispatch => new Promise(async (resolve, reject) => {\n  try {\n    // TODO: login\n    dispatch({\n      type: LOGGED_IN,\n      loggedIn: true,\n      checked: true,\n      me: {\n        email\n      }\n    });\n    resolve();\n  } catch (err) {\n    reject(err);\n  }\n});\n\nconst logout = () => dispatch => new Promise(async (resolve, reject) => {\n  try {\n    // TODO: logout\n    dispatch({\n      type: LOGGED_IN,\n      loggedIn: false,\n      checked: true,\n      me: null\n    });\n    resolve();\n  } catch (err) {\n    reject(err);\n  }\n});\n\nconst resetPassword = email => () => new Promise(async (resolve, reject) => {\n  try {\n    // TODO: reset password\n    resolve();\n  } catch (err) {\n    reject(err);\n  }\n});\n\nconst saveMe = me => dispatch => dispatch({\n  type: SAVE_ME,\n  me\n});\n\nexport const actions = {\n  authenticate,\n  saveMe,\n  signup,\n  login,\n  logout,\n  resetPassword\n}; // ------------------------------------\n// Action Handlers\n// ------------------------------------\n\nconst ACTION_HANDLERS = {\n  [LOGGED_IN]: (state, {\n    loggedIn,\n    me,\n    checked\n  }) => _objectSpread({}, state, {\n    loggedIn,\n    me,\n    checked\n  }),\n  [SAVE_ME]: (state, {\n    me\n  }) => _objectSpread({}, state, {\n    me\n  })\n}; // ------------------------------------\n// Reducer\n// ------------------------------------\n\nexport default function reducer(state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type];\n  return handler ? handler(state, action) : state;\n}","map":{"version":3,"sources":["/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/modules/app.module.js"],"names":["SAVE_ME","LOGGED_IN","initialState","checked","loggedIn","me","authenticate","dispatch","type","signup","email","password","Promise","resolve","reject","err","login","logout","resetPassword","saveMe","actions","ACTION_HANDLERS","state","reducer","action","handler"],"mappings":"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","sourcesContent":["// import { auth, storage } from '../utils/firebase'\n// import { message } from '../utils/const'\n\n// ------------------------------------\n// Constants\n// ------------------------------------\n\nconst SAVE_ME = 'SAVE_ME'\nconst LOGGED_IN = 'LOGGED_IN'\n\nconst initialState = {\n  checked: false,\n  loggedIn: false,\n  me: {},\n}\n\n// ------------------------------------\n// Actions\n// ------------------------------------\n\nexport const authenticate = () => dispatch => {\n  // TODO: authenticate user\n  dispatch({\n    type: LOGGED_IN,\n    loggedIn: false,\n    checked: true,\n    me: null,\n  })\n}\n\nconst signup = (email, password) => dispatch => new Promise(async (resolve, reject) => {\n  try {\n    // TODO: signup\n    dispatch({\n      type: LOGGED_IN,\n      loggedIn: true,\n      checked: true,\n      me: { email },\n    })\n    resolve()\n  } catch (err) {\n    reject(err)\n  }\n})\n\nconst login = (email, password) => dispatch => new Promise(async (resolve, reject) => {\n  try {\n    // TODO: login\n    dispatch({\n      type: LOGGED_IN,\n      loggedIn: true,\n      checked: true,\n      me: { email },\n    })\n    resolve()\n  } catch (err) {\n    reject(err)\n  }\n})\n\nconst logout = () => dispatch => new Promise(async (resolve, reject) => {\n  try {\n    // TODO: logout\n    dispatch({\n      type: LOGGED_IN,\n      loggedIn: false,\n      checked: true,\n      me: null,\n    })\n    resolve()\n  } catch (err) {\n    reject(err)\n  }\n})\n\nconst resetPassword = email => () => new Promise(async (resolve, reject) => {\n  try {\n    // TODO: reset password\n    resolve()\n  } catch (err) {\n    reject(err)\n  }\n})\n\nconst saveMe = me => dispatch => dispatch({\n  type: SAVE_ME,\n  me,\n})\n\nexport const actions = {\n  authenticate,\n  saveMe,\n  signup,\n  login,\n  logout,\n  resetPassword,\n}\n\n// ------------------------------------\n// Action Handlers\n// ------------------------------------\nconst ACTION_HANDLERS = {\n  [LOGGED_IN]: (state, { loggedIn, me, checked }) => ({\n    ...state,\n    loggedIn,\n    me,\n    checked,\n  }),\n  [SAVE_ME]: (state, { me }) => ({\n    ...state,\n    me,\n  }),\n}\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\n\nexport default function reducer(state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type]\n\n  return handler ? handler(state, action) : state\n}\n"]},"metadata":{},"sourceType":"module"}