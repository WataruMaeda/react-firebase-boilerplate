{"ast":null,"code":"import _defineProperty from \"/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/scenes/auth/ResetPassword/ResetPassword.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport SentEmailPopup from './SentEmailPopup';\nimport Input from '../../../components/Input';\nimport Error from '../../../components/Error';\nimport { styler, colors } from '../../../theme';\nimport { validate, tests } from '../../../utils/vali';\nimport { path } from '../../../utils/const';\nimport { Button } from '../../../components/Button';\nimport Connector from '../../../utils/connector';\nconst styles = styler({\n  root: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  contents: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '80%'\n  },\n  title: {\n    color: colors.yellow,\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 50\n  },\n  reset: {\n    fontSize: 16,\n    marginLeft: 5\n  },\n  btn: {\n    height: 50,\n    width: '45%',\n    fontSize: 16,\n    fontWeight: 'bold',\n    borderRadius: '5px !important',\n    '&::before': {\n      borderRadius: 5\n    },\n    '&:hover::before': {\n      borderRadius: 5\n    },\n    marginTop: 40\n  },\n  footer: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n});\n\nclass ResetPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      errors: {},\n      resErr: null,\n      isLoading: false,\n      isOpen: false\n    };\n\n    this.handleInputChange = ({\n      target\n    }) => {\n      const name = target.name,\n            value = target.value;\n      const errors = this.state.errors;\n      this.setState({\n        [name]: value,\n        errors: _objectSpread({}, errors, {\n          [name]: ''\n        })\n      });\n    };\n\n    this.onSend = () => {\n      // validation\n      const isLoading = this.state.isLoading;\n\n      const _validate = validate(this.state, tests),\n            isError = _validate.isError,\n            errors = _validate.errors;\n\n      this.setState({\n        errors\n      });\n      if (isError || isLoading) return; // reset password\n\n      this.setState({\n        isLoading: true\n      });\n      const actions = this.props.actions;\n      const email = this.state.email;\n      actions.resetPassword(email).then(() => {\n        this.setState({\n          isLoading: false,\n          isOpen: true\n        });\n      }).catch(err => {\n        this.setState({\n          resErr: err.message,\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const history = this.props.history;\n    const _this$state = this.state,\n          email = _this$state.email,\n          errors = _this$state.errors,\n          resErr = _this$state.resErr,\n          isLoading = _this$state.isLoading,\n          isOpen = _this$state.isOpen;\n    return React.createElement(\"div\", {\n      className: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Error, {\n      message: resErr,\n      onClose: () => {\n        this.setState({\n          resErr: null\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.contents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Reset Password\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      label: \"Email\",\n      placeholder: \"email@example.com\",\n      onChange: this.handleInputChange,\n      error: errors.email,\n      disabled: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Button, {\n      label: \"Send\",\n      className: \"btn-yellow-gradation \".concat(styles.btn),\n      onClick: this.onSend,\n      isLoading: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"Back to Login\",\n      className: \"btn-orange-outline \".concat(styles.btn),\n      onClick: () => history.push(path.login),\n      isLoading: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(SentEmailPopup, {\n      email: email,\n      isOpen: isOpen,\n      onClick: () => {\n        this.setState({\n          isOpen: false\n        });\n        history.push(path.login);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst ConnectedResetPassword = props => React.createElement(Connector, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146\n  },\n  __self: this\n}, ({\n  actions\n}) => React.createElement(ResetPassword, Object.assign({\n  actions: actions.app\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n})));\n\nResetPassword.propTypes = {};\nResetPassword.defaultProps = {};\nexport default ConnectedResetPassword;","map":{"version":3,"sources":["/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/scenes/auth/ResetPassword/ResetPassword.js"],"names":["React","Component","SentEmailPopup","Input","Error","styler","colors","validate","tests","path","Button","Connector","styles","root","flex","display","flexDirection","justifyContent","alignItems","contents","width","title","color","yellow","fontSize","fontWeight","marginBottom","reset","marginLeft","btn","height","borderRadius","marginTop","footer","ResetPassword","state","email","errors","resErr","isLoading","isOpen","handleInputChange","target","name","value","setState","onSend","isError","actions","props","resetPassword","then","catch","err","message","render","history","push","login","ConnectedResetPassword","app","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport SentEmailPopup from './SentEmailPopup'\nimport Input from '../../../components/Input'\nimport Error from '../../../components/Error'\nimport { styler, colors } from '../../../theme'\nimport { validate, tests } from '../../../utils/vali'\nimport { path } from '../../../utils/const'\nimport { Button } from '../../../components/Button';\nimport Connector from '../../../utils/connector'\n\nconst styles = styler({\n  root: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  contents: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '80%',\n  },\n  title: {\n    color: colors.yellow,\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 50,\n  },\n  reset: {\n    fontSize: 16,\n    marginLeft: 5,\n  },\n  btn: {\n    height: 50,\n    width: '45%',\n    fontSize: 16,\n    fontWeight: 'bold',\n    borderRadius: '5px !important',\n    '&::before': {\n      borderRadius: 5,\n    },\n    '&:hover::before': {\n      borderRadius: 5,\n    },\n    marginTop: 40,\n  },\n  footer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n})\n\nclass ResetPassword extends Component {\n  state = {\n    email: '',\n    errors: {},\n    resErr: null,\n    isLoading: false,\n    isOpen: false,\n  }\n\n  handleInputChange = ({ target }) => {\n    const { name, value } = target\n    const { errors } = this.state\n\n    this.setState({\n      [name]: value,\n      errors: {\n        ...errors,\n        [name]: '',\n      },\n    })\n  }\n\n  onSend = () => {\n    // validation\n    const { isLoading } = this.state\n    const { isError, errors } = validate(this.state, tests)\n    this.setState({ errors })\n    if (isError || isLoading) return\n\n    // reset password\n    this.setState({ isLoading: true })\n    const { actions } = this.props\n    const { email } = this.state\n    actions.resetPassword(email).then(() => {\n      this.setState({ isLoading: false, isOpen: true })\n    }).catch(err => {\n      this.setState({ resErr: err.message, isLoading: false })\n    })\n  }\n\n  render() {\n    const { history } = this.props\n    const { email, errors, resErr, isLoading, isOpen } = this.state\n    return (\n      <div className={styles.root}>\n        <Error\n          message={resErr}\n          onClose={() => {\n            this.setState({ resErr: null })\n          }}\n        />\n        <div className={styles.contents}>\n          <h3 className={styles.title}>Reset Password</h3>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            label=\"Email\"\n            placeholder=\"email@example.com\"\n            onChange={this.handleInputChange}\n            error={errors.email}\n            disabled={isLoading}\n          />\n          <div className={styles.footer}>\n            <Button\n              label=\"Send\"\n              className={`btn-yellow-gradation ${styles.btn}`}\n              onClick={this.onSend}\n              isLoading={isLoading}\n            />\n            <Button\n              label=\"Back to Login\"\n              className={`btn-orange-outline ${styles.btn}`}\n              onClick={() => history.push(path.login)}\n              isLoading={isLoading}\n            />\n          </div>  \n        </div>\n        <SentEmailPopup\n          email={email}\n          isOpen={isOpen}\n          onClick={() => {\n            this.setState({ isOpen: false })\n            history.push(path.login)\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nconst ConnectedResetPassword = props => (\n  <Connector>\n    {\n      ({ actions }) => (\n        <ResetPassword\n          actions={actions.app}\n          {...props}\n        />\n      )\n    }\n  </Connector>\n)\n\nResetPassword.propTypes = {\n}\n\nResetPassword.defaultProps = {\n}\n\nexport default ConnectedResetPassword\n"]},"metadata":{},"sourceType":"module"}