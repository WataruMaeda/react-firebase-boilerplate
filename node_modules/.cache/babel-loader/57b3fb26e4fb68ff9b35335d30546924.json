{"ast":null,"code":"var _jsxFileName = \"/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/components/FilePicker/FilePicker.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styler } from '../../theme';\nconst styles = styler({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative'\n  },\n  input: {\n    flex: 1,\n    // opacity: 0,\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    cursor: 'pointer',\n    background: 'orange'\n  }\n});\n\nconst FilePicker = ({\n  accept,\n  children,\n  maxSize,\n  onSelect,\n  onError\n}) => {\n  return React.createElement(\"div\", {\n    className: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, children, React.createElement(\"input\", {\n    type: \"file\",\n    accept: accept,\n    className: styles.input,\n    onChange: ({\n      target: {\n        files\n      }\n    }) => {\n      if (!files || files && files.length === 0) return;\n\n      if (!maxSize || typeof maxSize !== 'number') {\n        return onSelect(files[0]);\n      }\n\n      files[0].size < maxSize ? onSelect(files[0]) : onError();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nFilePicker.propTypes = {\n  accept: PropTypes.string,\n  children: PropTypes.any,\n  maxSize: PropTypes.number,\n  onSelect: PropTypes.func,\n  onError: PropTypes.func\n};\nFilePicker.defaultProps = {\n  accept: 'image/png, image/jpg, image/jpeg',\n  children: null,\n  maxSize: null,\n  onSelect: () => {},\n  onError: () => {}\n};\nexport default FilePicker;","map":{"version":3,"sources":["/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/components/FilePicker/FilePicker.js"],"names":["React","PropTypes","styler","styles","root","display","flexDirection","position","input","flex","top","right","bottom","left","cursor","background","FilePicker","accept","children","maxSize","onSelect","onError","target","files","length","size","propTypes","string","any","number","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAAC;AACpBE,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GADc;AAMpBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,CADD;AAEL;AACAF,IAAAA,QAAQ,EAAE,UAHL;AAILG,IAAAA,GAAG,EAAE,CAJA;AAKLC,IAAAA,KAAK,EAAE,CALF;AAMLC,IAAAA,MAAM,EAAE,CANH;AAOLC,IAAAA,IAAI,EAAE,CAPD;AAQLC,IAAAA,MAAM,EAAE,SARH;AASLC,IAAAA,UAAU,EAAE;AATP;AANa,CAAD,CAArB;;AAmBA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,MADkB;AAElBC,EAAAA,QAFkB;AAGlBC,EAAAA,OAHkB;AAIlBC,EAAAA,QAJkB;AAKlBC,EAAAA;AALkB,CAAD,KAMb;AACJ,SACE;AAAK,IAAA,SAAS,EAAElB,MAAM,CAACC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,QADH,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,MAAM,EAAED,MAFV;AAGE,IAAA,SAAS,EAAEd,MAAM,CAACK,KAHpB;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEc,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,KAAD,KAA2B;AACnC,UAAI,CAACA,KAAD,IAAWA,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,CAAzC,EAA6C;;AAC7C,UAAI,CAACL,OAAD,IAAY,OAAOA,OAAP,KAAmB,QAAnC,EAA6C;AAC3C,eAAOC,QAAQ,CAACG,KAAK,CAAC,CAAD,CAAN,CAAf;AACD;;AACDA,MAAAA,KAAK,CAAC,CAAD,CAAL,CAASE,IAAT,GAAgBN,OAAhB,GACIC,QAAQ,CAACG,KAAK,CAAC,CAAD,CAAN,CADZ,GAEIF,OAAO,EAFX;AAGD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAmBD,CA1BD;;AA4BAL,UAAU,CAACU,SAAX,GAAuB;AACrBT,EAAAA,MAAM,EAAEhB,SAAS,CAAC0B,MADG;AAErBT,EAAAA,QAAQ,EAAEjB,SAAS,CAAC2B,GAFC;AAGrBT,EAAAA,OAAO,EAAElB,SAAS,CAAC4B,MAHE;AAIrBT,EAAAA,QAAQ,EAAEnB,SAAS,CAAC6B,IAJC;AAKrBT,EAAAA,OAAO,EAAEpB,SAAS,CAAC6B;AALE,CAAvB;AAQAd,UAAU,CAACe,YAAX,GAA0B;AACxBd,EAAAA,MAAM,EAAE,kCADgB;AAExBC,EAAAA,QAAQ,EAAE,IAFc;AAGxBC,EAAAA,OAAO,EAAE,IAHe;AAIxBC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAJM;AAKxBC,EAAAA,OAAO,EAAE,MAAM,CAAE;AALO,CAA1B;AAQA,eAAeL,UAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { styler } from '../../theme'\n\nconst styles = styler({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n  },\n  input: {\n    flex: 1,\n    // opacity: 0,\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    cursor: 'pointer',\n    background: 'orange',\n  },\n})\n\nconst FilePicker = ({\n  accept,\n  children,\n  maxSize,\n  onSelect,\n  onError,\n}) => {\n  return (\n    <div className={styles.root}>\n      {children}\n      <input\n        type=\"file\"\n        accept={accept}\n        className={styles.input}\n        onChange={({ target: { files } }) => {\n          if (!files || (files && files.length === 0)) return\n          if (!maxSize || typeof maxSize !== 'number') {\n            return onSelect(files[0])\n          }\n          files[0].size < maxSize\n            ? onSelect(files[0])\n            : onError()\n        }}\n      />\n    </div>\n  )\n}\n\nFilePicker.propTypes = {\n  accept: PropTypes.string,\n  children: PropTypes.any,\n  maxSize: PropTypes.number,\n  onSelect: PropTypes.func,\n  onError: PropTypes.func,\n}\n\nFilePicker.defaultProps = {\n  accept: 'image/png, image/jpg, image/jpeg',\n  children: null,\n  maxSize: null,\n  onSelect: () => {},\n  onError: () => {},\n}\n\nexport default FilePicker\n"]},"metadata":{},"sourceType":"module"}