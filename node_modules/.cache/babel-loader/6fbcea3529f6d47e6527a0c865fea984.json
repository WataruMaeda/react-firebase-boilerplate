{"ast":null,"code":"var _jsxFileName = \"/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/scenes/auth/ResetPassword/SentEmailPopup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styler, colors } from '../../../theme';\nimport Modal from '../../../components/Modal';\nimport FontIcon from '../../../components/FontIcon';\nimport { Button } from '../../../components/Button';\nconst styles = styler({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 50\n  },\n  img: {\n    fontSize: 80,\n    color: colors.yellow\n  },\n  title: {\n    fontSize: 24,\n    marginTop: 30,\n    textAlign: 'center',\n    color: colors.yellow\n  },\n  desc: {\n    whiteSpace: 'pre-line',\n    fontSize: 16,\n    marginTop: 30,\n    textAlign: 'center'\n  },\n  btn: {\n    padding: '10px 20px',\n    fontSize: 18,\n    marginTop: 50,\n    borderRadius: 10,\n    width: '100%',\n    borderRadius: '5px !important',\n    '&::before': {\n      borderRadius: 5\n    },\n    '&:hover::before': {\n      borderRadius: 5\n    }\n  }\n});\n\nconst SentEmailPopup = ({\n  email,\n  isOpen,\n  onClick\n}) => {\n  return React.createElement(Modal, {\n    isOpen: isOpen,\n    toggleModal: null,\n    size: \"md\",\n    isCenter: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(FontIcon, {\n    icon: \"envelope-open-text\",\n    className: styles.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    className: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Password reset email sent\"), React.createElement(\"p\", {\n    className: styles.desc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Email sent to \", React.createElement(\"a\", {\n    href: \"mailto:\".concat(email),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, email), \". Follow the directions in the email to reset your password.\"), React.createElement(Button, {\n    label: \"OK\",\n    className: \"btn-yellow-gradation \".concat(styles.btn),\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n};\n\nSentEmailPopup.propTypes = {\n  isOpen: PropTypes.bool,\n  onClick: PropTypes.func\n};\nSentEmailPopup.defaultProps = {\n  isOpen: false,\n  onClick: () => {}\n};\nexport default SentEmailPopup;","map":{"version":3,"sources":["/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/scenes/auth/ResetPassword/SentEmailPopup.js"],"names":["React","PropTypes","styler","colors","Modal","FontIcon","Button","styles","root","display","flexDirection","justifyContent","alignItems","padding","img","fontSize","color","yellow","title","marginTop","textAlign","desc","whiteSpace","btn","borderRadius","width","SentEmailPopup","email","isOpen","onClick","propTypes","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { styler, colors } from '../../../theme'\nimport Modal from '../../../components/Modal'\nimport FontIcon from '../../../components/FontIcon'\nimport { Button } from '../../../components/Button'\n\nconst styles = styler({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 50,\n  },\n  img: {\n    fontSize: 80,\n    color: colors.yellow,\n  },\n  title: {\n    fontSize: 24,\n    marginTop: 30,\n    textAlign: 'center',\n    color: colors.yellow,\n  },\n  desc: {\n    whiteSpace: 'pre-line',\n    fontSize: 16,\n    marginTop: 30,\n    textAlign: 'center',\n  },\n  btn: {\n    padding: '10px 20px',\n    fontSize: 18,\n    marginTop: 50,\n    borderRadius: 10,\n    width: '100%',\n    borderRadius: '5px !important',\n    '&::before': {\n      borderRadius: 5,\n    },\n    '&:hover::before': {\n      borderRadius: 5,\n    },\n  }\n})\n\nconst SentEmailPopup = ({\n  email,\n  isOpen,\n  onClick,\n}) => {\n  return (\n    <Modal isOpen={isOpen} toggleModal={null} size=\"md\" isCenter>\n      <div className={styles.root}>\n        <FontIcon\n          icon=\"envelope-open-text\"\n          className={styles.img}\n        />\n        <h2 className={styles.title}>Password reset email sent</h2>\n        <p className={styles.desc}>\n          Email sent to <a href={`mailto:${email}`}>{email}</a>. Follow the directions in the email to reset your password.\n        </p>\n        <Button\n          label=\"OK\"\n          className={`btn-yellow-gradation ${styles.btn}`}\n          onClick={onClick}\n        />\n      </div>\n    </Modal>\n  )\n}\n\nSentEmailPopup.propTypes = {\n  isOpen: PropTypes.bool,\n  onClick: PropTypes.func,\n}\n\nSentEmailPopup.defaultProps = {\n  isOpen: false,\n  onClick: () => {},\n}\n\nexport default SentEmailPopup\n"]},"metadata":{},"sourceType":"module"}