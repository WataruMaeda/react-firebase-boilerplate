{"ast":null,"code":"var _jsxFileName = \"/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/components/Modal/Modal.js\";\nimport React from 'react';\nimport { Modal } from 'reactstrap';\nimport { PropTypes } from 'prop-types';\nimport './modal.css';\nimport { styler, images } from '../../theme';\nconst styles = styler({\n  closeContainer: {\n    display: 'none',\n    padding: '20%',\n    '@media (max-width: 600px)': {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      padding: '16px 16px 0'\n    }\n  },\n  closeImg: {\n    width: 30,\n    height: 30\n  }\n});\n\nconst modal = ({\n  isOpen,\n  centered,\n  toggleModal,\n  children,\n  size\n}) => React.createElement(Modal, {\n  size: size,\n  isOpen: isOpen,\n  centered: centered,\n  toggle: toggleModal,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: styles.closeContainer,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(\"aside\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), React.createElement(\"img\", {\n  src: images.close,\n  className: styles.closeImg,\n  onClick: toggleModal,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n})), children);\n\nmodal.propTypes = {\n  isOpen: PropTypes.bool,\n  toggleModal: PropTypes.func,\n  children: PropTypes.any,\n  size: PropTypes.any\n};\nmodal.defaultProps = {\n  isOpen: false,\n  centered: false,\n  toggleModal: () => {},\n  children: null,\n  size: 'lg'\n};\nexport default modal;","map":{"version":3,"sources":["/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/components/Modal/Modal.js"],"names":["React","Modal","PropTypes","styler","images","styles","closeContainer","display","padding","flexDirection","justifyContent","closeImg","width","height","modal","isOpen","centered","toggleModal","children","size","close","propTypes","bool","func","any","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAO,aAAP;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,aAA/B;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAAC;AACpBG,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE,MADK;AAEdC,IAAAA,OAAO,EAAE,KAFK;AAGd,iCAA6B;AAC3BD,MAAAA,OAAO,EAAE,MADkB;AAE3BE,MAAAA,aAAa,EAAE,KAFY;AAG3BC,MAAAA,cAAc,EAAE,eAHW;AAI3BF,MAAAA,OAAO,EAAE;AAJkB;AAHf,GADI;AAWpBG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,MAAM,EAAE;AAFA;AAXU,CAAD,CAArB;;AAiBA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,MADa;AAEbC,EAAAA,QAFa;AAGbC,EAAAA,WAHa;AAIbC,EAAAA,QAJa;AAKbC,EAAAA;AALa,CAAD,KAOZ,oBAAC,KAAD;AACE,EAAA,IAAI,EAAEA,IADR;AAEE,EAAA,MAAM,EAAEJ,MAFV;AAGE,EAAA,QAAQ,EAAEC,QAHZ;AAIE,EAAA,MAAM,EAAEC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMA;AAAK,EAAA,SAAS,EAAEZ,MAAM,CAACC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AACE,EAAA,GAAG,EAAEF,MAAM,CAACgB,KADd;AAEE,EAAA,SAAS,EAAEf,MAAM,CAACM,QAFpB;AAGE,EAAA,OAAO,EAAEM,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CANA,EAcGC,QAdH,CAPF;;AA0BAJ,KAAK,CAACO,SAAN,GAAkB;AAChBN,EAAAA,MAAM,EAAEb,SAAS,CAACoB,IADF;AAEhBL,EAAAA,WAAW,EAAEf,SAAS,CAACqB,IAFP;AAGhBL,EAAAA,QAAQ,EAAEhB,SAAS,CAACsB,GAHJ;AAIhBL,EAAAA,IAAI,EAAEjB,SAAS,CAACsB;AAJA,CAAlB;AAOAV,KAAK,CAACW,YAAN,GAAqB;AACnBV,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,QAAQ,EAAE,KAFS;AAGnBC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAHF;AAInBC,EAAAA,QAAQ,EAAE,IAJS;AAKnBC,EAAAA,IAAI,EAAE;AALa,CAArB;AAQA,eAAeL,KAAf","sourcesContent":["import React from 'react'\nimport { Modal } from 'reactstrap'\nimport { PropTypes } from 'prop-types'\nimport './modal.css'\nimport { styler, images } from '../../theme'\n\nconst styles = styler({\n  closeContainer: {\n    display: 'none',\n    padding: '20%',\n    '@media (max-width: 600px)': {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      padding: '16px 16px 0',\n    },\n  },\n  closeImg: {\n    width: 30,\n    height: 30,\n  },\n})\n\nconst modal = ({\n  isOpen,\n  centered,\n  toggleModal,\n  children,\n  size,\n}) => (\n  <Modal\n    size={size}\n    isOpen={isOpen}\n    centered={centered}\n    toggle={toggleModal}\n  > \n  <div className={styles.closeContainer}>\n    <aside />\n    <img\n      src={images.close}\n      className={styles.closeImg}\n      onClick={toggleModal}\n    />\n  </div>\n    {children}\n  </Modal>\n)\n\n\nmodal.propTypes = {\n  isOpen: PropTypes.bool,\n  toggleModal: PropTypes.func,\n  children: PropTypes.any,\n  size: PropTypes.any,\n}\n\nmodal.defaultProps = {\n  isOpen: false,\n  centered: false,\n  toggleModal: () => {},\n  children: null,\n  size: 'lg',\n}\n\nexport default modal\n"]},"metadata":{},"sourceType":"module"}