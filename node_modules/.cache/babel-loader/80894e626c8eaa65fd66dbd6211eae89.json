{"ast":null,"code":"var _jsxFileName = \"/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/components/Button/Button.js\";\nimport React, { Fragment } from 'react';\nimport { PropTypes } from 'prop-types';\nimport Spinner from '../Spinner';\nimport { styler } from '../../theme';\nimport './button.css';\nconst styles = styler({\n  root: {\n    borderRadius: 3,\n    background: 'transparent',\n    outline: 'none',\n    border: 'none',\n    '&:focus': {\n      outline: 0,\n      boxShadow: 'none'\n    }\n  }\n});\n\nconst Button = ({\n  label,\n  className,\n  style,\n  spinnerStyle,\n  onClick,\n  children,\n  disabled,\n  isLoading\n}) => React.createElement(\"button\", {\n  className: \"\".concat(styles.root, \" \").concat(className),\n  style: style,\n  onClick: onClick,\n  disabled: disabled || isLoading,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, isLoading ? React.createElement(Spinner, {\n  iconStyle: spinnerStyle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}) : React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, label, children));\n\nButton.propTypes = {\n  label: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  spinnerStyle: PropTypes.object,\n  children: PropTypes.any,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nButton.defaultProps = {\n  label: '',\n  className: '',\n  style: {},\n  spinnerStyle: {},\n  onClick: () => {},\n  children: null,\n  disabled: false,\n  isLoading: false\n};\nexport default Button;","map":{"version":3,"sources":["/Users/wmaeda/Documents/me/Web/react-firebase-boilerplate/src/components/Button/Button.js"],"names":["React","Fragment","PropTypes","Spinner","styler","styles","root","borderRadius","background","outline","border","boxShadow","Button","label","className","style","spinnerStyle","onClick","children","disabled","isLoading","propTypes","string","object","any","func","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAO,cAAP;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAAC;AACpBE,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAE,CADV;AAEJC,IAAAA,UAAU,EAAE,aAFR;AAGJC,IAAAA,OAAO,EAAE,MAHL;AAIJC,IAAAA,MAAM,EAAE,MAJJ;AAKJ,eAAW;AACTD,MAAAA,OAAO,EAAE,CADA;AAETE,MAAAA,SAAS,EAAE;AAFF;AALP;AADc,CAAD,CAArB;;AAaA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,KADc;AAEdC,EAAAA,SAFc;AAGdC,EAAAA,KAHc;AAIdC,EAAAA,YAJc;AAKdC,EAAAA,OALc;AAMdC,EAAAA,QANc;AAOdC,EAAAA,QAPc;AAQdC,EAAAA;AARc,CAAD,KAUb;AACE,EAAA,SAAS,YAAKf,MAAM,CAACC,IAAZ,cAAoBQ,SAApB,CADX;AAEE,EAAA,KAAK,EAAEC,KAFT;AAGE,EAAA,OAAO,EAAEE,OAHX;AAIE,EAAA,QAAQ,EAAEE,QAAQ,IAAIC,SAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMGA,SAAS,GACR,oBAAC,OAAD;AAAS,EAAA,SAAS,EAAEJ,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADQ,GAGR,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,KADH,EAEGK,QAFH,CATJ,CAVF;;AA2BAN,MAAM,CAACS,SAAP,GAAmB;AACjBR,EAAAA,KAAK,EAAEX,SAAS,CAACoB,MADA;AAEjBR,EAAAA,SAAS,EAAEZ,SAAS,CAACoB,MAFJ;AAGjBP,EAAAA,KAAK,EAAEb,SAAS,CAACqB,MAHA;AAIjBP,EAAAA,YAAY,EAAEd,SAAS,CAACqB,MAJP;AAKjBL,EAAAA,QAAQ,EAAEhB,SAAS,CAACsB,GALH;AAMjBP,EAAAA,OAAO,EAAEf,SAAS,CAACuB,IANF;AAOjBN,EAAAA,QAAQ,EAAEjB,SAAS,CAACwB,IAPH;AAQjBN,EAAAA,SAAS,EAAElB,SAAS,CAACwB;AARJ,CAAnB;AAWAd,MAAM,CAACe,YAAP,GAAsB;AACpBd,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,SAAS,EAAE,EAFS;AAGpBC,EAAAA,KAAK,EAAE,EAHa;AAIpBC,EAAAA,YAAY,EAAE,EAJM;AAKpBC,EAAAA,OAAO,EAAE,MAAM,CAAE,CALG;AAMpBC,EAAAA,QAAQ,EAAE,IANU;AAOpBC,EAAAA,QAAQ,EAAE,KAPU;AAQpBC,EAAAA,SAAS,EAAE;AARS,CAAtB;AAWA,eAAeR,MAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport { PropTypes } from 'prop-types'\nimport Spinner from '../Spinner'\nimport { styler } from '../../theme'\nimport './button.css'\n\nconst styles = styler({\n  root: {\n    borderRadius: 3,\n    background: 'transparent',\n    outline: 'none',\n    border: 'none',\n    '&:focus': {\n      outline: 0,\n      boxShadow: 'none',\n    },\n  },\n})\n\nconst Button = ({\n  label,\n  className,\n  style,\n  spinnerStyle,\n  onClick,\n  children,\n  disabled,\n  isLoading,\n}) => (\n  <button\n    className={`${styles.root} ${className}`}\n    style={style}\n    onClick={onClick}\n    disabled={disabled || isLoading}\n  >\n    {isLoading ? (\n      <Spinner iconStyle={spinnerStyle}/>\n    ) : (\n      <Fragment>\n        {label}\n        {children}\n      </Fragment>\n    )}\n  </button>\n)\n\nButton.propTypes = {\n  label: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  spinnerStyle: PropTypes.object,\n  children: PropTypes.any,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  isLoading: PropTypes.bool,\n}\n\nButton.defaultProps = {\n  label: '',\n  className: '',\n  style: {},\n  spinnerStyle: {},\n  onClick: () => {},\n  children: null,\n  disabled: false,\n  isLoading: false,\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}